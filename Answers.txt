Here is an example of code documentation in Python:

```python
def calculate_area(length, width):
    """
    Calculates the area of a rectangle.

    Args:
        length (float): The length of the rectangle.
        width (float): The width of the rectangle.

    Returns:
        float: The area of the rectangle.

    Raises:
        ValueError: If either length or width is negative.

    Example:
        >>> calculate_area(5, 3)
        15.0
    """

def greet(name):
    """
    Prints out a personalized greeting message.

    Args:
        name (str): The person's name to be greeted.

    Returns:
        None

    Raises:
        TypeError: If the input is not a string.

    Example:
        >>> greet("John")
        'Hello John!'
    """

def find_max_value(numbers):
    """
    Finds the maximum value in a list of numbers.

    Args:
        numbers (list): A list of numeric values.

    Returns:
        float: The maximum value in the list.

    Raises:
        ValueError: If the input list is empty.

    Example:
        >>> find_max_value([3, 5, 1, 9])
        9
    """

if __name__ == "__main__":
    # Test the functions
    print(calculate_area(5, 3))  # Output: 15.0
    greet("Jane")  # Output: 'Hello Jane!'
    numbers = [3, 5, 1, 9]
    print(find_max_value(numbers))  # Output: 9
```

This documentation includes the following information:

- A brief description of what each function does.
- The input parameters and their types, with a description of what each parameter represents.
- The return value and its type, with an example usage.
- Any exceptions raised by the function, along with a description of what they represent.
- An example usage of each function.

Note: You can also use other documentation tools like docstrings in Python.